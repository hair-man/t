[global]
#true代表不忽略zlog的任何错误
strict init = true
#单条日志的最小缓存和最大缓存
buffer min = 1024
buffer max = 2MB
#每写入多少条日志进行一次reload配置文件
reload conf period = 100
#指定了一个锁文件，保证多进程情况下日志安全转档

#注意：在设定锁文件时，一定要确保用户对该文件有相关权限，负责会导致程序无法运行
rotate lock file = /tmp/query_engine_zlog.lock
#缺省模式下的日志格式
# %d 日志的时间
# %ms 毫秒
# %V 打印日志级别大写
# %F 源码的文件名
# %L 源码的行号
# %m 用户从zlog中输入的日志信息
# %n 换行符
# 默认的日志格式
#default format = "[ %d.%ms %-6V ] %m%n"
#default format = "%d.%ms %-6V [%F, %L] - %m%n"
#日志文件的权限，666代表rw-rw-rw-即所有用户都有读写权限
file perms = 666
[levels]
#日志的等级自定义
TRACE = 10
CRIT = 130, LOG_CRIT
[formats]
simple = "%d.%ms %-6V [%F, %L] - %m%n"
simple_user = "[ %d.%ms USER ] - %m%n"
simple_task = "[ %d.%ms TASK ] - %m%n"
#normal = "%d %m%n"
[rules]
#*.*  >stdout;simple *.*   "aa.log"
# *.=ERROR           "./logs/%d(%M).%c.error";date_time_log # 按分钟切割日志文件
#*.=ERROR           "./logs/%d(%H).%c.error";date_time_log # 按小时切割日志文件
# *.=ERROR          "./logs/%d(%F).%c.error";date_time_log # 按天切割日志文件
# *.=ERROR          >stderr;level_log
*.=DEBUG        >stderr
*.=ERROR        >stderr
*.=INFO         >stderr
*.=WARN         >stderr

#按大小切割日志%c时间
run_log.=INFO         "../log/run_log_%d(%Y%m%d)_info.log",2M * 5  ~ "../log/run_log_%d(%Y%m%d)_info.log.#r";simple
run_log.=WARN         "../log/run_log_%d(%Y%m%d)_warn.log",2M * 5  ~ "../log/run_log_%d(%Y%m%d)_warn.log.#r";simple
run_log.=ERROR        "../log/run_log_%d(%Y%m%d)_error.log",2M * 5  ~ "../log/run_log_%d(%Y%m%d)_error.log.#r";simple
run_log.=DEBUG        "../log/run_log_%d(%Y%m%d)_debug.log",2M * 5  ~ "../log/run_log_%d(%Y%m%d)_debug.log.#r";simple
